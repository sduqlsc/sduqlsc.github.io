<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>周总结（4/6~4/12）</title>
    <url>/posts/391f48bb.html</url>
    <content><![CDATA[<!-- build time:Tue Apr 14 2020 12:22:09 GMT+0800 (GMT+08:00) --><html><head></head><body><p>巨人岿然不动，英雄遍体鳞伤！</p><a id="more"></a><h3 id="打卡"><a href="#打卡" class="headerlink" title="打卡"></a>打卡</h3><p>跑量 <code>27.13km</code>🏃‍♂️ ，本周看到 <a href="https://weibo.com/1191258123/ICoqvzeDz" target="_blank" rel="noopener external nofollow noreferrer">@韩寒</a> 晒出的 5km 成绩，哇，佩服，3’43’’ 的平均配速，真·亭林之光，😂！一通羡慕嫉妒恨的舔屏加口水之后，本菜也是蠢蠢欲动，第二天早起穿衣一气呵成，出门启动尝试了一下，4’38’’，还算满意——最大心率 179，平均心率 162，没敢使劲往上怼，似乎每天做点平板支撑还是很有效果的，💪。</p><h3 id="理财"><a href="#理财" class="headerlink" title="理财"></a>理财</h3><p><strong>外围向好不敢跌，都去过节放开绿！</strong> 我大 A 开始秀了，╮(╯▽╰)╭。看到石油已经达成减产协议了，总算有点利好了，不过谨记预期一致就是利空，利好出尽也是利空。作为个人，不管心动还是幡动，按计划行事，克己复礼，老老实实修行自己，做好自己的事情，不沾黄赌毒，好好经营“家”公司，否则就是自己的雷自己埋，数个一二三到时准炸飞，不是不报，只等众人抱薪，典型的就是这周的新闻——<a href="https://3g.163.com/news/article_cambrian/F9T6703I00019B3E.html" target="_blank" rel="noopener external nofollow noreferrer">高管被指性侵未成年养女</a>。</p><p>本周来看，医疗方面呈现强势之态，这一周似乎没了题材轮动的火热之势，资金抱团趋势明显，使劲往医药、消费挤，比如一日售罄的易方达消费基金，<strong>“拥挤的地方不要去……但凡爆款出现，至少预示阶段顶部”</strong>。另外，央妈金山放水的结果就是把余额宝收益率降至 2%，这也算是个热搜了。所以，年前来看，4% 的年金险还是很不错的；现阶段，风险敏感人群配置写银行理财或者短债之类的债券基金也算是收益过得去。</p><p><a href="https://www.jisilu.cn/data/indicator/" target="_blank" rel="noopener external nofollow noreferrer">A 股全市场温度计</a> 本周 PB 15.7，PE 19.29。</p><p><a href="https://qieman.com/portfolios/ZH035746/weekly-reports/205f80c522761d20aab8cc0ee9430c96" target="_blank" rel="noopener external nofollow noreferrer">且慢组合</a> 本周五净值 1.1934，上涨 <font color="red">+1.95%</font>。本周基于上涨以及港股休市的原因，无操作，总投入 11,200，市值 11,145.21，累计收益率 <font color="green">-0.49%</font>。</p><p>定投组合 本周为止本金 75852.11，市值 79515.09，今年来收益率 <font color="green">-4.71%</font>。</p><p>网格 本周为止本金 9677.04，总市值 9589.77，今年来累计盈亏 <font color="green">-256.05</font>。4/9 券商 ETF 卖出一格，重启创业板 50 网格。</p><h3 id="话外音"><a href="#话外音" class="headerlink" title="话外音"></a>话外音</h3><p>疫情还未到缓解之际，本周本市发现一例无症状感染者，路漫漫等开学的小阳已经快要无聊死了，好在每天都有计划，该干的事情还是有条不紊，虽然还是空闲的时候多。春来万物生，茅庐似三九，停暖的日子只能靠空调了。</p><p>最近这两年越来越觉得，科学没有国界，但是xxx……总觉得最后的结果就是类似移动网——<del>王中王</del>ˋ( ° ▽、° ) ，网中网。比如，因为金毛制裁的原因，<kbd>gayHub</kbd> 等科技公司会把来自伊朗、三月半之类的开发者账号禁用，也是迷。再到之前的菊厂也是由于“股沟”遵守“毛衣”禁令原因，被逼打造出了自己的应用商店。我们常说同气连枝，可是打架的时候，又得鼓励自己自强不息，天下之势早在那个纷乱的演义中，被说的一清二楚。</p><p>工作方面，例行季度述职，感觉会议越多越累，凡事都得拉会议、开钉钉协调。本周还莫名其妙的来了一次胃疼，从傍晚到睡觉没消停，有种年龄越大，身体越来越遭不住了的感觉，😢，所以暂时没有继续吃钙片。继续研究流媒体中，整合手头的资源，总算是能把摄像头推流了，还是得感叹一句，自己摸索真难，一山还有一山高，有时候情不自禁会感觉明明爬得不高，转头却发现连个商量的人都没了！陪着小阳去了趟书店，冷冷清清，是真冷也真冷，新华的价格还是那么高高在上啊。</p><p>感觉最近消费有点多啊，去一次超市就得二三百起步，开源节流。头次发现，“并夕夕”的月卡也是真香的呀，无门槛的券我估计就是套路拉新了，抢是不可能抢得到的。一通操作之后，NB 的 F80 显示器支架低于狗东很多的价格入手，开心o(<em>￣▽￣</em>)ブ。话说到显示器，27 寸的 4K 显示真是爽啊，可惜飞了不到一天，打开 VSCode 的时候，发现黑色背景有一块白色的印记，嗯，擦不掉，（＞人＜；）！无奈换货，又是一番折腾，待周一吧。另外，入手了张大妈上的站🔪一把，切菜也是倍儿爽，🤸‍♀️。</p><p>昨晚看了一部电影，嗯，开篇的那句话是对这个感悟，推荐大家看一下，《<a href="https://movie.douban.com/subject/30331959/" target="_blank" rel="noopener external nofollow noreferrer">黑水 Dark Waters</a>》，里面还有<strong>安迪</strong>。</p><blockquote><p>我对人类感到悲观，因为它对于自己的利益太过精明。我们对待自然的办法是打击并使之屈服。如果我们不是这样的多疑和专横，如果我们能调整好与这颗行星的关系，并深怀感激之心对待它，我们本可有更好的存活机会。—— 埃尔文·布鲁克斯·怀特</p></blockquote><!-- rebuild by neat --></body></html>]]></content>
      <categories>
        <category>随笔</category>
        <category>数字生活</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>Android USB 摄像头 RTMP 推流</title>
    <url>/posts/4bac1117.html</url>
    <content><![CDATA[<!-- build time:Tue Apr 14 2020 12:22:09 GMT+0800 (GMT+08:00) --><html><head></head><body><p>对这一段时间来，一直调查的方向做个总结。</p><a id="more"></a><h4 id="UVC-Camera"><a href="#UVC-Camera" class="headerlink" title="UVC Camera"></a>UVC Camera</h4><p>Android 设备要连接 USB 外置摄像头，需要对接 <code>UVC</code> 协议，这方面，大多数推荐的库为 <a href="https://github.com/saki4510t/UVCCamera" target="_blank" rel="noopener external nofollow noreferrer"><code>saki4510t/UVCCamera</code></a>。绝大多数的第三方库都基于此库进行修改、完善和封装。</p><blockquote><p>百度百科：UVC全称为 USB Video Class，即：USB视频类，是一种为USB视频捕获设备定义的协议标准。是Microsoft与另外几家设备厂商联合推出的为USB视频捕获设备定义的协议标准，已成为USB org标准之一。</p></blockquote><h4 id="RTMP"><a href="#RTMP" class="headerlink" title="RTMP"></a>RTMP</h4><p>通用的流程一般就是调用 <kbd>Camera/Camera2</kbd> 以及麦克风进行音视频采集之后合成推流 <a href="#refer-anchor"><sup>1</sup></a>：</p><div id="flowchart-0" class="flow-chart"></div><p>Android 上支持流媒体解析或推流的库主要有以下几个：</p><ul><li><a href="https://github.com/begeekmyfriend/yasea" target="_blank" rel="noopener external nofollow noreferrer">yasea</a><ul><li>纯 Java 编译</li><li>不支持 UVC</li></ul></li><li><a href="https://github.com/tsingsee/EasyRTMP" target="_blank" rel="noopener external nofollow noreferrer">EasyRTMP</a><ul><li>平台支持：Windows、Linux、ARM(各种交叉编译工具链)、Android、iOS</li><li>支持 UVC</li><li>收费</li></ul></li><li><a href="https://github.com/pedroSG94/rtmp-rtsp-stream-client-java" target="_blank" rel="noopener external nofollow noreferrer">rtmp-rtsp-stream-client-java</a><ul><li>支持 RTMP、RTSP</li><li>Java 编写</li><li>不支持 UVC</li></ul></li><li>Native - 通过 JNI 调用 C++，不支持 UVC<ul><li>librtmp/RTMPDump，参考 <a href="#refer-anchor"><sup>1</sup></a></li><li>ffmpeg，参考 <a href="#refer-anchor"><sup>2</sup></a></li></ul></li><li><a href="https://github.com/jiangdongguo/AndroidUSBCamera" target="_blank" rel="noopener external nofollow noreferrer">AndroidUSBCamera</a><ul><li>基于 <code>saki4510t</code></li><li>USB 摄像头 (UVC) 视频录制和图片抓拍，支持边推流边录像</li><li>需手动适配设备本身的 Camera</li></ul></li><li><a href="https://github.com/bytedeco/javacv/" target="_blank" rel="noopener external nofollow noreferrer">JavaCV</a><ul><li>用 JNI 封装了OpenCV，FFmpeg，libdc1394，PGR FlyCapture，OpenKinect，librealsense，CL PS3 Eye Driverx，videoInput，ARToolKitPlus以及flandmark 等的接口，从而为 Java 操作提供便捷方式</li><li>全平台支持 RTMP、RTSP</li><li>因为有 opencv，所以可以做图像处理方面的工作</li><li>不支持 UVC</li></ul></li><li>其他SDK<ul><li><a href="https://www.daniulive.com/" target="_blank" rel="noopener external nofollow noreferrer">大牛直播 SDK</a></li><li>金山云等</li></ul></li></ul><p>所以，综上考虑一下，采用 <kbd>AndroidUSBCamera</kbd>+<kbd>JavaCV</kbd>是一个很好的方式，一个负责画面展示，一个负责音频以及数据解析：<br>本身 <code>AndroidUSBCamera</code> 提供预览接口，所以我们可以设置变量在录制时通过 <code>setOnPreviewFrameListener</code> 处理传来的视频 <code>nv21</code> 信息；而 <code>JavaCV</code> 则可以处理音频数据，然后借助 <code>ffmpeg</code> 合成推流。主要参考就是示例工程中的 <code>RecordActivity</code> <a href="#refer-anchor"><sup>3</sup></a>。</p><h4 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h4><h5 id="AndroidUSBCamera"><a href="#AndroidUSBCamera" class="headerlink" title="AndroidUSBCamera"></a>AndroidUSBCamera</h5><p>这个 <code>saki4510t UVCCamera</code> 的依赖库最好还是直接下载 <code>aar</code> 和 <code>jar</code> 更快一些，也避免一些编译错误。</p><h5 id="JavaCV"><a href="#JavaCV" class="headerlink" title="JavaCV"></a>JavaCV</h5><p>因为是全平台的，所以最好删减一下，但是在使用过程中，会爆出 <code>couldn't find "libjniavutil.so"</code> <a href="#refer-anchor"><sup>5</sup></a> 的错误，我这边的解决方式为：</p><figure class="highlight gradle"><table><tbody><tr><td class="code"><pre><span class="line">ndk {</span><br><span class="line">    abiFilters <span class="string">'armeabi-v7a'</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">compile</span> <span class="keyword">group</span>: <span class="string">'org.bytedeco'</span>, name: <span class="string">'javacv'</span>, version: <span class="string">'1.4.4'</span></span><br><span class="line"><span class="keyword">compile</span> <span class="keyword">group</span>: <span class="string">'org.bytedeco.javacpp-presets'</span>, name: <span class="string">'opencv'</span>, version: <span class="string">'4.0.1-1.4.4'</span>, classifier: <span class="string">'android-arm'</span></span><br><span class="line"><span class="keyword">compile</span> <span class="keyword">group</span>: <span class="string">'org.bytedeco.javacpp-presets'</span>, name: <span class="string">'opencv'</span>, version: <span class="string">'4.0.1-1.4.4'</span>, classifier: <span class="string">'android-arm64'</span></span><br><span class="line"><span class="keyword">compile</span> <span class="keyword">group</span>: <span class="string">'org.bytedeco.javacpp-presets'</span>, name: <span class="string">'ffmpeg'</span>, version: <span class="string">'4.1-1.4.4'</span>, classifier: <span class="string">'android-arm'</span></span><br><span class="line"><span class="keyword">compile</span> <span class="keyword">group</span>: <span class="string">'org.bytedeco.javacpp-presets'</span>, name: <span class="string">'ffmpeg'</span>, version: <span class="string">'4.1-1.4.4'</span>, classifier: <span class="string">'android-arm64'</span></span><br></pre></td></tr></tbody></table></figure><h4 id="测试服务器"><a href="#测试服务器" class="headerlink" title="测试服务器"></a>测试服务器</h4><ul><li><a href="https://github.com/ossrs/srs#usage" target="_blank" rel="noopener external nofollow noreferrer">OSSRS SRS</a> - 支持 RTMP/HLS/WebRTC/SRT/GB28181</li><li><a href="https://github.com/illuspas/nginx-rtmp-win32" target="_blank" rel="noopener external nofollow noreferrer">nginx-rtmp-win32</a> - Windows 下开箱即用，比较简单</li><li><a href="https://github.com/illuspas/Node-Media-Server" target="_blank" rel="noopener external nofollow noreferrer">Node-Media-Server</a> + <code>flvjs</code></li></ul><h4 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h4><p>这里需要对 <code>ffmpeg</code> 的参数有所了解，通过一些控制参数来降低推流的延迟<a href="#refer-anchor"><sup>7</sup></a>：</p><ul><li>关闭 sync-lookahead</li><li>降低 rc-lookahead，但别小于 10,默认是 -1</li><li>降低 threads(比如从 12 降到 6)</li><li>禁用 rc-lookahead</li><li>禁用 b-frames</li><li>缩小 GOP</li><li>开启 x264 的 -preset fast/faster/verfast/superfast/ultrafast 参数</li><li>使用 -tune zerolatency 参数</li></ul><p>具体到 <code>JavaCV</code> 代码中<a href="#refer-anchor"><sup>9</sup></a>：</p><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// FFmpegFrameRecorder(String filename, int imageWidth, int imageHeight,</span></span><br><span class="line"><span class="comment">// int audioChannels) fileName可以是本地文件（会自动创建），也可以是RTMP路径（发布到流媒体服务器）</span></span><br><span class="line"><span class="comment">// imageWidth = width （为捕获器设置宽） imageHeight = height （为捕获器设置高）</span></span><br><span class="line"><span class="comment">// audioChannels = 2（立体声）；1（单声道）；0（无音频）</span></span><br><span class="line">recorder = <span class="keyword">new</span> FFmpegFrameRecorder(ffmpeg_link, imageWidth, imageHeight, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 该参数用于降低延迟 参考FFMPEG官方文档：https://trac.ffmpeg.org/wiki/StreamingGuide</span></span><br><span class="line"><span class="comment">// 官方原文参考：ffmpeg -f dshow -i video="Virtual-Camera" -vcodec libx264</span></span><br><span class="line"><span class="comment">// -tune zerolatency -b 900k -f mpegts udp://10.1.0.102:1234</span></span><br><span class="line">recorder.setVideoOption(<span class="string">"tune"</span>, <span class="string">"zerolatency"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 权衡quality(视频质量)和encode speed(编码速度) values(值)：</span></span><br><span class="line"><span class="comment">// ultrafast(终极快),superfast(超级快), veryfast(非常快), faster(很快), fast(快),</span></span><br><span class="line"><span class="comment">// medium(中等), slow(慢), slower(很慢), veryslow(非常慢)</span></span><br><span class="line"><span class="comment">// ultrafast(终极快)提供最少的压缩（低编码器CPU）和最大的视频流大小；而veryslow(非常慢)提供最佳的压缩（高编码器CPU）的同时降低视频流的大小</span></span><br><span class="line"><span class="comment">// 参考：https://trac.ffmpeg.org/wiki/Encode/H.264 官方原文参考：-preset ultrafast</span></span><br><span class="line"><span class="comment">// as the name implies provides for the fastest possible encoding. If</span></span><br><span class="line"><span class="comment">// some tradeoff between quality and encode speed, go for the speed.</span></span><br><span class="line"><span class="comment">// This might be needed if you are going to be transcoding multiple</span></span><br><span class="line"><span class="comment">// streams on one machine.</span></span><br><span class="line">recorder.setVideoOption(<span class="string">"preset"</span>, <span class="string">"ultrafast"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 参考转流命令: ffmpeg</span></span><br><span class="line"><span class="comment">// -i'udp://localhost:5000?fifo_size=1000000&overrun_nonfatal=1' -crf 30</span></span><br><span class="line"><span class="comment">// -preset ultrafast -acodec aac -strict experimental -ar 44100 -ac</span></span><br><span class="line"><span class="comment">// 2-b:a 96k -vcodec libx264 -r 25 -b:v 500k -f flv 'rtmp://wowza</span></span><br><span class="line"><span class="comment">// serverIP/live/cam0' -crf 30</span></span><br><span class="line"><span class="comment">// -设置内容速率因子,这是一个x264的动态比特率参数，它能够在复杂场景下(使用不同比特率，即可变比特率)保持视频质量；</span></span><br><span class="line"><span class="comment">// 可以设置更低的质量(quality)和比特率(bit rate),参考Encode/H.264 -preset ultrafast</span></span><br><span class="line"><span class="comment">// -参考上面preset参数，与视频压缩率(视频大小)和速度有关,需要根据情况平衡两大点：压缩率(视频大小)，编/解码速度 -acodec</span></span><br><span class="line"><span class="comment">// aac -设置音频编/解码器 (内部AAC编码) -strict experimental</span></span><br><span class="line"><span class="comment">// -允许使用一些实验的编解码器(比如上面的内部AAC属于实验编解码器) -ar 44100 设置音频采样率(audio sample</span></span><br><span class="line"><span class="comment">// rate) -ac 2 指定双通道音频(即立体声) -b:a 96k 设置音频比特率(bit rate) -vcodec libx264</span></span><br><span class="line"><span class="comment">// 设置视频编解码器(codec) -r 25 -设置帧率(frame rate) -b:v 500k -设置视频比特率(bit</span></span><br><span class="line"><span class="comment">// rate),比特率越高视频越清晰,视频体积也会变大,需要根据实际选择合理范围 -f flv</span></span><br><span class="line"><span class="comment">// -提供输出流封装格式(rtmp协议只支持flv封装格式) 'rtmp://FMS server</span></span><br><span class="line"><span class="comment">// IP/live/cam0'-流媒体服务器地址</span></span><br><span class="line">recorder.setVideoOption(<span class="string">"crf"</span>, <span class="string">"25"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2000 kb/s, 720P视频的合理比特率范围</span></span><br><span class="line">recorder.setVideoBitrate(<span class="number">2000000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 音频比特率</span></span><br><span class="line"><span class="comment">//recorder.setAudioBitrate(192000);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 最高质量</span></span><br><span class="line"><span class="comment">//recorder.setAudioQuality(0);</span></span><br><span class="line">recorder.setSampleRate(sampleAudioRateInHz);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 双通道(立体声) -- 注意：立体声和单声道处理方法不一样</span></span><br><span class="line"><span class="comment">// recorder.setAudioChannels(2);</span></span><br></pre></td></tr></tbody></table></figure><h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>从前年直播答题开始的预热，到去年抖音、快手的直播、连麦、短视频、KOL 带货等的推动，加之现在疫情期间在线授课、远程工作的加持，借助 4/5G 网络，这算是当前一直很火热的领域了；以前觉得集成集成一个就行，而现在用户经过培育之后，体验方面要求也越来越高，稳定性、安全性更不用说了，真是需要积累的。这也算是一种倒逼吧。<br>经过这段时间的摸索，感觉流媒体技术方面是个很大的“坑”——网上的资料大部分都是初级的入门教程，却没有一个深入的讲解，绝大部分不能用于生产环境。除去说的资源和教程少，单单拿出的细分领域也多，而协议更多，比如 RTMP、RTSP、HLS、webRTC……以及还要对各家的摄像头和 NVR 的对接要做的了然于胸。深深感觉到自己的菜，自研的话技术壁垒确实高，入门曲线特别抖，核心代码一般都是 C++，而且还要交叉编译到各个平台，😵。而借助开源库虽然可以实现一些功能，但是要改动的话还是要对一些库做功课，这个不是一朝一夕的功夫，如果有个带头大哥真是再好不过。</p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><div id="refer-anchor"></div><ul><li>[1] <a href="https://www.cnblogs.com/haibindev/p/8989218.html" target="_blank" rel="noopener external nofollow noreferrer">NDK C++开发Android端RTMP直播推流程序</a></li><li>[2] <a href="https://www.jishudog.com/9074/html" target="_blank" rel="noopener external nofollow noreferrer">Android基于FFmpeg进行RTMP推流</a>、<a href="https://www.jianshu.com/nb/17697147" target="_blank" rel="noopener external nofollow noreferrer">音频编码</a></li><li>[3] <a href="https://github.com/bytedeco/sample-projects" target="_blank" rel="noopener external nofollow noreferrer">JavaCV 示例工程</a></li><li>[4] <a href="https://blog.csdn.net/weixin_42105345/article/details/80169695" target="_blank" rel="noopener external nofollow noreferrer">JavaCV实现音视频混合推送(录制)到服务器(本地)</a></li><li>[5] <a href="https://sq.163yun.com/blog/article/214094674042236928" target="_blank" rel="noopener external nofollow noreferrer">JavaCV在Android中的应用</a></li><li>[6] <a href="https://blog.csdn.net/sun8532685/article/details/96105884" target="_blank" rel="noopener external nofollow noreferrer">Android视频采集实时推送RTP/RTSP/RTMP</a></li><li>[7] <a href="https://blog.csdn.net/fireroll/article/details/51902018" target="_blank" rel="noopener external nofollow noreferrer">ffmpeg的转码延时测试与设置优化</a></li><li>[8] <a href="https://juejin.im/post/5e8e714f6fb9a03c832b089c" target="_blank" rel="noopener external nofollow noreferrer">Electron 低延迟视频流播放方案探索</a></li><li>[9] <a href="https://blog.csdn.net/weixin_42105345/article/details/80169695" target="_blank" rel="noopener external nofollow noreferrer">JavaCV实现音视频混合推送(录制)到服务器(本地)</a><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display:none">s=>start: Camera/Camera2
av=>condition: 音视频
v1=>operation: 视频 H264 编码
vcond=>condition: 硬/软 编码
v2=>operation: Android MediaCodec
v3=>operation: x264 软编码
a1=>operation: 音频麦克风采集

rtmp=>operation: NDK RTMP
e=>end: 音视频合成推流

s->av(right)
av(yes)->v1(right)->vcond
av(no,bottom)->a1
vcond(yes)->v2
vcond(no)->v3
v2->rtmp
v3->rtmp
a1->rtmp
rtmp->e</textarea><textarea id="flowchart-0-options" style="display:none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>var code=document.getElementById("flowchart-0-code").value,options=JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value)),diagram=flowchart.parse(code);diagram.drawSVG("flowchart-0",options)</script></li></ul><!-- rebuild by neat --></body></html>]]></content>
      <categories>
        <category>教程</category>
        <category>数字生活</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>UVC</tag>
        <tag>RTMP</tag>
        <tag>USB Camera</tag>
      </tags>
  </entry>
  <entry>
    <title>韩少年而立，奔跑赛十八</title>
    <url>/posts/5b331afd.html</url>
    <content><![CDATA[<!-- build time:Tue Apr 14 2020 12:22:09 GMT+0800 (GMT+08:00) --><html><head></head><body><p><a href="https://imgchr.com/i/G4mEAH" target="_blank" rel="noopener external nofollow noreferrer"><img src="https://s1.ax1x.com/2020/04/09/G4mEAH.th.jpg" alt="G4mEAH.th.jpg"></a></p><a id="more"></a><h3 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h3><p><a href="https://weibo.com/hanhan?refer_flag=0000015012_&from=feed&loc=nickname" target="_blank" rel="noopener external nofollow noreferrer">@韩寒</a></p><blockquote><p>今年第一次在体育场的训练，感觉快到夏天 ​​​​</p></blockquote><p><a href="https://imgchr.com/i/G4mg81" target="_blank" rel="noopener external nofollow noreferrer"><img src="https://s1.ax1x.com/2020/04/09/G4mg81.md.jpg" alt="G4mg81.md.jpg"></a></p><p>我只能说韩少真是猛，虽然是有基础，考虑到 38 的年龄，业余大神级别，这个配速，啧啧称奇！所以，脚踏实地一步一步科学训练，年龄越大，收益匪浅。PS：鞋子真好，ˋ( ° ▽、° )，嗯，NEXT% 最新一代 —— Air Zoom Alphafly NEXT%。不得不说，NIKE 厉害，精准营销，韩少除了一身腱子肉，剩下的就是 NIKE 加持了。希望有一天能跑进 20 以内，💪！</p><h3 id="RTFSC"><a href="#RTFSC" class="headerlink" title="RTFSC"></a>RTFSC</h3><p>上面是 <code>Linus</code> 大神说的：</p><blockquote><p>Read The Fucking Source Code</p></blockquote><p>理解别人的东西很难，譬如造车等工程领域里的“逆向”，给你一个实体，你只能用“黑盒”测试的方式，一步一步探求原理，草蛇灰线，最后汇聚一处。</p><!-- rebuild by neat --></body></html>]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>27 显示器选 4K 就对了</title>
    <url>/posts/92c493d.html</url>
    <content><![CDATA[<!-- build time:Tue Apr 14 2020 12:22:09 GMT+0800 (GMT+08:00) --><html><head></head><body><p>对于大都数人来说，家用、办公 27’’ 是个合适的尺寸，而 4K 也是个很好的分辨率。</p><a id="more"></a><h3 id="太长不看"><a href="#太长不看" class="headerlink" title="太长不看"></a>太长不看</h3><p>无脑戴尔即可，如果觉得自己是欧皇附体，可以选择 <code>koios</code>、<code>松人</code> 之类，动手能力强的，自己组装。</p><h3 id="序"><a href="#序" class="headerlink" title="序"></a>序</h3><p>打算买一个显示器，于是做了一番调查，本身办公室有 23 的 1080P，所以 2K 起步，尺寸上 25 以下的大小基本没啥意思，而 27 以上的太大而且想要高素质的，荷包可能撑不住o(<em>￣▽￣</em>)o，所以综合来看 27 是个比较折衷的配置。</p><h3 id="关于显示器你需要知道的参数"><a href="#关于显示器你需要知道的参数" class="headerlink" title="关于显示器你需要知道的参数"></a>关于显示器你需要知道的参数</h3><h4 id="面板"><a href="#面板" class="headerlink" title="面板"></a>面板</h4><p>条件允许，无脑 <code>IPS</code>，其他情况酌情 <code>VA</code>，表示无所谓、没要求的，<code>TN</code>。</p><h4 id="分辨率"><a href="#分辨率" class="headerlink" title="分辨率"></a>分辨率</h4><p>同等尺寸下，分辨率越高，像素点尺寸越小，PPI 也就越大，显示效果越细腻。所以，23 1920x1080 起步，27 2K（2560X1440） 起步，4K最佳。</p><h4 id="刷新率"><a href="#刷新率" class="headerlink" title="刷新率"></a>刷新率</h4><p>刷新率越高，拖影现象越不明显；不打游戏 or 集成显卡，60 Hz 起步；否则，120 Hz 走起。</p><h4 id="色深"><a href="#色深" class="headerlink" title="色深"></a>色深</h4><p>单个颜色可以显示的最亮和最暗态的数量，两千元档 27 的显示器大部分为 8bit，即使宣称 10bit 也是抖出来。</p><h4 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h4><p>DP（1.4 最好） & HDMI（2.0 最佳） 必须有， <code>Type-C</code> 是加分项，VGA & DVI 属于选修，当然🍎来说，MiniDP少不了。除去以上这些，有的还会配置 USB 传输口以及充电口。</p><h4 id="HDR"><a href="#HDR" class="headerlink" title="HDR"></a>HDR</h4><p>高动态范围，一般在高端系列会配置，不严格的讲，数字越大越好。</p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>可升降、可旋转、可壁挂是最好的，因为显示器尺寸越大，相应占用桌面空间就越大，这时候用支架也是一个很好的选择。</p><h3 id="候选品牌"><a href="#候选品牌" class="headerlink" title="候选品牌"></a>候选品牌</h3><p>综合以上考虑，两千左右预算，IPS、4K、27，以及综合以上其他因素，在🐕东有以下可选：</p><ul><li><a href="https://item.jd.com/100001071956.html?dist=jd" target="_blank" rel="noopener external nofollow noreferrer">AOC U2790PQU 27英寸 4K高清 IPS广视角 微框 99% sRGB 商用办公节能 低蓝光不闪旋转升降PS4液晶显示器 ￥1999.00</a></li><li><a href="https://item.jd.com/100002302927.html" target="_blank" rel="noopener external nofollow noreferrer">LG 27英寸 4K 超高清 HDR10 适配 PS4显示器 广色域 IPS 硬屏 旋转 升降 色彩校准 阅读模式 显示屏 27UL550 ￥2299.00</a></li><li><a href="https://item.jd.com/100004473556.html?dist=jd" target="_blank" rel="noopener external nofollow noreferrer">优派 27英寸显示器 4K超高清 IPS HDR400 120%sRGB 旋转升降可壁挂办公 ps4电脑显示器VX2780-4K-HD-2 ￥2399.00</a></li></ul><p>其他如宏碁、飞利浦等不是没货就是不销售，要么不是自营。最后，综合LG 的 4K 面板四角泛红、价格以及接口丰富程度等因素，AOC 比较满足需求。</p><!-- rebuild by neat --></body></html>]]></content>
      <categories>
        <category>随笔</category>
        <category>数字生活</category>
      </categories>
      <tags>
        <tag>显示器</tag>
        <tag>4K</tag>
      </tags>
  </entry>
  <entry>
    <title>接口太少，Type-c 扩展坞走起</title>
    <url>/posts/5789b220.html</url>
    <content><![CDATA[<!-- build time:Tue Apr 14 2020 12:22:09 GMT+0800 (GMT+08:00) --><html><head></head><body><p>笔记本轻薄化的今天，越来越方便的同时造成的后果就是厂商大刀阔斧留下的接口不多，尤其是丐版，😭多一个就多一份成本。</p><a id="more"></a><p>大多数人买了轻薄笔记本后，有没有一种厂商恨不能削减到意念开机的感觉？且不说满血雷电口有多贵，多加个全功能的 USB-C 也不容易。想要外接设备，首要选择就是扩展坞了。入手扩展坞，首要看需求吧，如果需要的设备不多，一般三合一或者单买就足够。不过，确定需求前，先看看接口，以及需要排雷的地方，😂。</p><h3 id="接口类型"><a href="#接口类型" class="headerlink" title="接口类型"></a>接口类型</h3><p>不过在需求确定前，我们可以先看一下哪些口需要扩展：</p><ul><li>必备<ul><li>HDMI - 现如今高清口已经成为标配</li><li>USB - 3.0 最佳，2.0 读取速度太慢</li><li>PD - 在 type-c “惜口如金”的情况下，PD 充电必不可少，最好是支持笔记本充电，也就是 <code>65W</code> 起步</li></ul></li><li>选装，优先度依次降低<ul><li>VGA - 把它排在第一位，是因为有些投影设备还是此接口，另外利旧的显示器也是如此</li><li>RJ45 网口 - 总有些地方没有无线或者信号太差，百兆起步，千兆最佳</li><li>mini DP - 这个目前我调查来看，高端显示器会有此接口</li><li>3.5mm 音频接口</li><li>TF/SD 卡接口 - 非刚需，一般插上读卡器接入 USB 即可</li></ul></li></ul><h3 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h3><ul><li>VGA 最大支持的分辨率为 1080p</li><li>HDMI 要注意看支持的最大分辨率，特别是有 <code>2K/4K</code> 外置显示器的，请注意看是否最少能支持 <strong>4K@30Hz</strong></li><li>有的扩展坞 VGA & HDMI 同时接显示器会出现黑屏</li><li>需要高清 <strong>4K@60Hz</strong> 还是老老实实满血雷电口或者 <code>type-c</code> 转 <code>DP</code>，马爸爸价格在 30 元左右，品牌一般 80</li><li>一般情况下，HDMI 接口最大也就支持 <code>4K@30Hz</code> 了</li></ul><h3 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h3><ul><li>大厂<ul><li>雷电<ul><li>CalDigit TS3 plus</li><li>Belkin Thunderbolt 3 Dock Pro</li><li>DELL和 HP 的洋垃圾，可咸鱼</li></ul></li><li>非雷电<ul><li>Apple USB-C 转 HDMI/USB-C/USB-A</li><li>Dell DA300</li></ul></li></ul></li><li>常规<ul><li>外置 4K 高清刚需 - 除了雷电3，目前来看全速的 type-c 转 DP 是最佳方式<ul><li>小米扩展坞，目前只能闲鱼</li><li>单独买一根 <code>type-c</code> 转 <code>DP</code></li></ul></li><li>普通<ul><li>绿联 - <a href="https://item.jd.com/33628537150.html" target="_blank" rel="noopener external nofollow noreferrer">六合一</a> 带PD、千兆网卡、HDMI 4K@30Hz、USB 3；<a href="https://item.jd.com/63881964424.html" target="_blank" rel="noopener external nofollow noreferrer">这款</a>据说支持 4K@60Hz，私以为达不到</li><li>京造 - <a href="https://item.jd.com/100009638756.html" target="_blank" rel="noopener external nofollow noreferrer">十合一</a> 功能齐全</li><li>奥睿科 - <a href="https://item.jd.com/4791144.html" target="_blank" rel="noopener external nofollow noreferrer">六合一</a>，VGA、HDMI、RJ45、PD、USB 都有，支持 4K@30Hz</li></ul></li></ul></li></ul><h3 id="拾遗"><a href="#拾遗" class="headerlink" title="拾遗"></a>拾遗</h3><h4 id="转接口冷知识"><a href="#转接口冷知识" class="headerlink" title="转接口冷知识"></a>转接口冷知识</h4><p><a href="https://www.v2ex.com/t/652435" target="_blank" rel="noopener external nofollow noreferrer">trepwq</a>：</p><blockquote><p>最近研究了一下 c 转 dp/hdmi，c 口出来的是 dp，hdmi 是从 dp 转来的。如果要 usb3.0，dp 只能 2lanes，而 dp1.2 的 2lanes 只能 4k30hz，dp1.4 的 2lanes 可以 4k60hz ；如果要 usb2.0，就可以 dp 4lanes，可以输出 4k60hz，兼容老设备的 dp1.2，小米那个 c 转 dp 就是这样。如果不需要 usb，可以看看 dell 的 c 转 hdmi/dp，hdmi 或 dp 二选一，都可以 4k60hz</p></blockquote><h4 id="Type-C-分类-知乎"><a href="#Type-C-分类-知乎" class="headerlink" title="Type-C 分类 - 知乎"></a>Type-C 分类 - <a href="https://zhuanlan.zhihu.com/p/101434503" target="_blank" rel="noopener external nofollow noreferrer">知乎</a></h4><p><a href="https://imgchr.com/i/GgxCCt" target="_blank" rel="noopener external nofollow noreferrer"><img src="https://s1.ax1x.com/2020/04/07/GgxCCt.jpg" alt="GgxCCt.jpg"></a></p><!-- rebuild by neat --></body></html>]]></content>
      <categories>
        <category>随笔</category>
        <category>数字生活</category>
      </categories>
      <tags>
        <tag>type-c</tag>
        <tag>扩展坞</tag>
      </tags>
  </entry>
  <entry>
    <title>周总结（3/30~4/5）</title>
    <url>/posts/78d40b52.html</url>
    <content><![CDATA[<!-- build time:Tue Apr 14 2020 12:22:09 GMT+0800 (GMT+08:00) --><html><head></head><body><p>活着才是最大输出，“人是为了活着本身而活着,而不是为了活着之外的任何事物而活着”。</p><a id="more"></a><h3 id="打卡"><a href="#打卡" class="headerlink" title="打卡"></a>打卡</h3><p>跑量 <code>26.71km</code> ，心率控制稍有起色，本周最开心的莫过于成功坚持 <code>52</code> 周跑步，向 <code>99</code> 进发，跑量进入 <code>3000km</code>，爬上金字塔的是雄鹰，也有🐌！</p><h3 id="理财"><a href="#理财" class="headerlink" title="理财"></a>理财</h3><p>本周个人感觉进入了阴跌的模式，医药、消费涨势不错。从几个公众号来看，成交量缩量，金毛这里也是危机重重，不过越是危机，越是会针对我兔。既然他能腾出手处理油的事情，说明总体可控。央妈又开始放大招，定向降准，调整市场的货币政策，促进经济恢复。下周的看点还是金毛、北极熊以及沙特的三国博弈，但是对于每个参与者来说，只要其他人不改变策略，他就无法改善自己的状况——嗯，经典的纳什均衡，所以掰手腕之后，还得坐下来谈！眼看它楼塌了，看着手中的<code>华宝油气</code>，留下了不甘的泪水😏。</p><p>本周还有一个让人觉得吃相难看的事情就是国货之耻——“瑞幸”了，最大的影响莫过于老外对<code>中概股</code>的偏见加深，有弊有利，好的一面在于，如果中概股受影响有所调整，那就有机会入手一些筹码了。当然，还有一个有意思的现象就是“优惠券挤兑”效应，就跟隔壁商超要清算，顾客赶紧消耗购物卡是一个道理。然而，大财主已经割过一茬韭菜了，真是玩的溜，自爆做空。</p><p><a href="https://qieman.com/portfolios/ZH035746/weekly-reports/914d2de54edea8ea08599f55a5d2959d" target="_blank" rel="noopener external nofollow noreferrer">且慢组合</a> 本周五净值 1.1705，上涨 <font color="red">+0.73%</font>。周四 4/2 买入 200 元，总投入 11,200，市值 10,931.99，累计收益率 <font color="green">-2.49%</font>。</p><p>定投组合本周为止本金 75752.20，市值 77542.89，今年来收益率 <font color="green">-6.87%</font>。</p><p>网格本周为止本金 9677.04，总市值 9468.04，今年来累计盈亏 <font color="green">-377.05</font>。</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>本周工作越来越感觉掉坑里了，人在家中坐，锅从天上来。项目投标伊始，没有参与过，结果中标了，😞一言难尽，流媒体作为新手真真有种积累不足，败事有余的赶脚。平台组方面，怎么说呢，职场人起码的工作准则吧，对于工作，吃人饭受人管，心里确实不太愿意参与，安心做一个静默发光的老酒，于无声处同化身边的人更好。会议太频繁，想退出，而且大家工作基本也不重叠、相关。有时候上司跟你谈工作交接，其实就是找个甩锅的……为何有此想法呢，自己事后剖析了一下：嗯，当组织有可能预见关键因素出现不稳定时，那么管理者就会更多的从“大局”的利益考量，而不会征询你的意见抑或象征性的问你有什么想法，所以这就造成了某种膈应。</p><p>根据公司的补贴标准，算了算顶格的折扣，入手了一个 27” 的显示器，手头的笔记本是 2.5K 屏幕，一入高清深似海，从此画质是标准。这个显示器，刷新率 60Hz 是硬伤但是办公足够，2K画质，（ 4K@60Hz 真是带不动），接口齐全😂，看图片也不会糊了应该。东哥送过来，就是这个 feel 倍爽的样子，结果人算不如天算，扩展坞最大支持 1080P，心里一万只🐎。没办法，重选，看好小米的转接头，结果早就没货了。选来选去，最后买了一个 C 转 DP 的线，看看效果吧，嗯，#等我有钱了#。打算出一期扩展坞的调查系列。</p><p><strong>晚上在友人处把酒言欢，两三升黑啤下肚，七八块黄瓜入口。感叹岁月已老人易醉，看孩童嬉戏，聊生活之种种。归时半月如炬不孤单，手有相扣，侧有娇妻，耳有童声，酣畅入梦后，又是一个春天。</strong></p><!-- rebuild by neat --></body></html>]]></content>
      <categories>
        <category>随笔</category>
        <category>数字生活</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>唯愿逆风随我意，长歌当哭盼子归。</title>
    <url>/posts/1b4fac9a.html</url>
    <content><![CDATA[<!-- build time:Tue Apr 14 2020 12:22:09 GMT+0800 (GMT+08:00) --><html><head></head><body><blockquote><p>这是一个流行离开的世界，但是我们都不擅长告别。</p></blockquote><div style="text-align:right">—— 米兰昆德拉《生活在别处》</div><a id="more"></a><p>今天是清明节，送别英雄，两个月时光回首似白驹，经历如涅槃，这世间的春天终于才更像春天来临的模样。</p><p><a href="https://imgchr.com/i/GBZomF" target="_blank" rel="noopener external nofollow noreferrer"><img src="https://s1.ax1x.com/2020/04/05/GBZomF.md.png" alt="GBZomF.md.png"></a></p><p><code>手握一光烛，心中话凄凉。</code></p><p><code>独听猿哀鸣，轻烟托思殇。</code></p><p>花谢花开，冬去春来，时间会冲淡我们对你的思念，时间会模糊你的样子，但不变的是你们逆光前行的身影，你们仍是我们为之骄傲之引力，感谢我们与你在这世间的相遇。</p><p>幸好有你们，RIP！</p><!-- rebuild by neat --></body></html>]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>李文亮</tag>
        <tag>清明</tag>
      </tags>
  </entry>
  <entry>
    <title>技术点</title>
    <url>/posts/338e9336.html</url>
    <content><![CDATA[<!-- build time:Tue Apr 14 2020 12:22:09 GMT+0800 (GMT+08:00) --><html><head></head><body><p>归纳些技术碎片，留待查阅，不定时更新</p><a id="more"></a><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><h4 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h4><p>参考 <a href="https://juejin.im/post/5e83da19e51d45471a1cb6dd" target="_blank" rel="noopener external nofollow noreferrer">掘金</a>。</p><h5 id="ESLint"><a href="#ESLint" class="headerlink" title="ESLint"></a>ESLint</h5><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">npm install eslint --save-dev</span><br></pre></td></tr></tbody></table></figure><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = {</span><br><span class="line">  root: <span class="literal">true</span>,</span><br><span class="line">  env: {</span><br><span class="line">    node: <span class="literal">true</span></span><br><span class="line">  },</span><br><span class="line"></span><br><span class="line">  <span class="comment">// "extend": ["airbnb-base"],</span></span><br><span class="line">  extends: [<span class="string">"plugin:vue/essential"</span>, <span class="string">"eslint:recommended"</span>],</span><br><span class="line">  rules: {</span><br><span class="line">    <span class="string">"no-console"</span>: process.env.NODE_ENV === <span class="string">"production"</span> ? <span class="string">"error"</span> : <span class="string">"off"</span>,</span><br><span class="line">    <span class="string">"no-debugger"</span>: process.env.NODE_ENV === <span class="string">"production"</span> ? <span class="string">"error"</span> : <span class="string">"off"</span>,</span><br><span class="line">    <span class="comment">//强制使用单引号</span></span><br><span class="line">    quotes: [<span class="string">"error"</span>, <span class="string">"single"</span>]</span><br><span class="line">    <span class="comment">//强制不使用分号结尾</span></span><br><span class="line">    <span class="comment">// semi: ['error', 'never']</span></span><br><span class="line">  },</span><br><span class="line">  parserOptions: {</span><br><span class="line">    parser: <span class="string">"babel-eslint"</span></span><br><span class="line">  }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><h5 id="Husky"><a href="#Husky" class="headerlink" title="Husky"></a>Husky</h5><blockquote><p>can prevent bad <code>git commit</code>, <code>git push</code></p></blockquote><figure class="highlight json"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// package.json</span></span><br><span class="line">{</span><br><span class="line">  <span class="attr">"scripts"</span>: {</span><br><span class="line">    <span class="attr">"lint"</span>: <span class="string">"eslint . --cache"</span></span><br><span class="line">  },</span><br><span class="line">  <span class="attr">"husky"</span>: {</span><br><span class="line">    <span class="attr">"hooks"</span>: {</span><br><span class="line">      <span class="attr">"pre-commit"</span>: <span class="string">"npm lint"</span>,</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>也可结合 <a href="https://github.com/okonet/lint-staged" target="_blank" rel="noopener external nofollow noreferrer"><code>lint-staged</code></a>:</p><figure class="highlight json"><table><tbody><tr><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">"husky"</span>: {</span><br><span class="line">    <span class="attr">"hooks"</span>: {</span><br><span class="line">      <span class="attr">"pre-commit"</span>: <span class="string">"lint-staged"</span></span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">  <span class="attr">"lint-staged"</span>: {</span><br><span class="line">    <span class="attr">"*.js|{lib,setup,bin,hot,tooling,schemas}/**/*.js|test/*.js|{test,examples}/**/webpack.config.js}"</span>: [</span><br><span class="line">      <span class="string">"eslint --cache"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"*.{ts,json,yml,yaml,md}|examples/*.md"</span>: [</span><br><span class="line">      <span class="string">"prettier --check"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"*.md|{.github,benchmark,bin,examples,hot,lib,schemas,setup,tooling}/**/*.{md,yml,yaml,js,json}"</span>: [</span><br><span class="line">      <span class="string">"cspell"</span></span><br><span class="line">    ]</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h5 id="gitlab-CI"><a href="#gitlab-CI" class="headerlink" title="gitlab  CI"></a>gitlab CI</h5><figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">lint:</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">lint</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/^feature\/.*$/</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">npm</span> <span class="string">lint</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><h4 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h4><ul><li>查看进程：<code>ps -ef|grep xxx</code></li><li>跟踪进程内部的系统调用和信号：<code>strace</code></li><li>打印出运行中程序的堆栈信息：<code>pstack pid</code></li><li>按树形结构打印运行中进程结构信息：pstree</li><li><code>/proc/pid</code> 文件了解进程的运行时信息和统计信息</li><li><code>pgrep -u xx</code>，相当于 <code>ps -ef | egrep '^hchen' | awk '{print $2}'</code></li></ul><p>找出当前系统内存使用量较高的进程：<code>ps -aux | sort -rnk 4 | head -20</code><br>找出当前系统CPU使用量较高的进程：<code>ps -aux | sort -rnk 3 | head -20</code></p><h4 id="垃圾文件删除"><a href="#垃圾文件删除" class="headerlink" title="垃圾文件删除"></a>垃圾文件删除</h4><p><code>tmpwatch</code> 用于删除 <code>/tmp</code> 目录下的文件，以及其它地方其他无用的文件，如旧的日志文件，<strong>不要在 <code>/</code>（根目录）中运行</strong></p><h4 id="网络工具-netcat"><a href="#网络工具-netcat" class="headerlink" title="网络工具 netcat"></a>网络工具 netcat</h4><p>检查开放端口，可以扫描单个端口或端口范围。</p><h4 id="同时查看多个日志或数据文件"><a href="#同时查看多个日志或数据文件" class="headerlink" title="同时查看多个日志或数据文件"></a>同时查看多个日志或数据文件</h4><p><code>multitail</code></p><!-- rebuild by neat --></body></html>]]></content>
      <categories>
        <category>tutorials</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>ESLint</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 美化拾遗</title>
    <url>/posts/b1147857.html</url>
    <content><![CDATA[<!-- build time:Tue Apr 14 2020 12:22:09 GMT+0800 (GMT+08:00) --><html><head></head><body><p>整理一下个人的随便摸鱼的一些美化操作。</p><a id="more"></a><h3 id="FIGlet"><a href="#FIGlet" class="headerlink" title="FIGlet"></a>FIGlet</h3><p><strong>FIGlet</strong> 是基于 <code>ASCII</code> 字符组成的字符画，具体可参考<a href="http://www.figlet.org/" target="_blank" rel="noopener external nofollow noreferrer">官网</a>。</p><h4 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h4><ul><li><p>特殊字符生成可以用以下网址：</p><ul><li><p><a href="http://patorjk.com/software/taag/#p=display&f=Alpha&t=CFZ%E2%99%A5" target="_blank" rel="noopener external nofollow noreferrer">patorjk</a></p></li><li><p><a href="http://life.chacuo.net/convertfont2char" target="_blank" rel="noopener external nofollow noreferrer">convertfont2char</a></p></li><li><p><a href="[image2ascii](https://www.fontke.com/tool/image2ascii/)">图片转字符画</a></p></li></ul></li><li><p>编辑器</p><ul><li><code>VSCode</code> 中可以用 <code>ASCIIDecorator</code>、<code>VSC Figlet</code> 扩展来进行输出</li></ul></li><li><p>NodeJs</p><ul><li>可安装 <code>figlet</code> 包，项目<a href="https://github.com/patorjk/figlet.js" target="_blank" rel="noopener external nofollow noreferrer">地址</a>，<code>npm install figlet -s</code></li></ul></li></ul><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>具体使用可参考项目地址，在我这里使用如下：</p><ol><li><p>clone 项目地址：</p><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next/<span class="built_in">source</span>/js/</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/patorjk/figlet.js.git</span><br></pre></td></tr></tbody></table></figure></li><li><p>在 <code>/source/_data/body-end.swig</code> 中：<br>引入 JS 文件： <code>//cdn.bootcss.com/fetch/1.0.0/fetch.min.js</code> 以及 <code>/js/figlet.js/lib/figlet.js</code>。</p><figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line">figlet.defaults({</span><br><span class="line">    fontPath: <span class="string">'/js/figlet.js/fonts'</span></span><br><span class="line">});</span><br><span class="line"></span><br><span class="line">figlet(<span class="string">'CFZ'</span>, <span class="string">'Standard'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, text</span>) </span>{</span><br><span class="line">    <span class="keyword">if</span> (err) {</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'something went wrong...'</span>);</span><br><span class="line">        <span class="built_in">console</span>.dir(err);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">console</span>.log(text);</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure></li></ol><!-- rebuild by neat --></body></html>]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>FIGlet</tag>
      </tags>
  </entry>
  <entry>
    <title>Notes</title>
    <url>/posts/c0da8988.html</url>
    <content><![CDATA[<!-- build time:Tue Apr 14 2020 12:22:09 GMT+0800 (GMT+08:00) --><html><head></head><body><p>Never Waste a Good Crisis.</p><a id="more"></a><h3 id="见底判断"><a href="#见底判断" class="headerlink" title="见底判断"></a>见底判断</h3><p>双腰折理论：</p><blockquote><p>一个品种，首先不会退市，超级泡沫后，经过两次腰折后大概率见大底。<br>这个方法对指数准确度非常高。</p></blockquote><p>孥孥的大树:</p><blockquote><p>缺口理论，第一个缺口是突破（向上或向下）缺口，第二是持续缺口，第三是消耗缺口。假设向下跌的趋势，则是到了第三个缺口出现后，市场下跌的动能会逐步减弱。<br>每次调整，其实就是考量，时间，跌幅，成交量。跌幅的问题用估值来衡量……把成交量缩减至极致，最终就见底了。……结合历史上对应的比例，后期成交额可能会回落到1500-2000亿以内。</p></blockquote><p>复利人生:</p><blockquote><p><code>上证 50</code> 日线 2300-2400 点分批买入，真正值得重仓的机会。</p></blockquote><p><a href="https://weibo.com/5687069307/IBiXqi9OR?type=comment" target="_blank" rel="noopener external nofollow noreferrer">@ETF拯救世界</a>：</p><blockquote><p>沪深300 相当于恒指17000的点位是 3100 点左右<br>全指医药 已经不再便宜，持仓的拿住，最好不要再买了。 ​​​​（11300点）<br>DAX 8200，极限跌幅 6200</p></blockquote><p>由此推算，恒指 21000 对应沪深 300 是 <code>3829</code> 点左右。</p><p><a href="https://mp.weixin.qq.com/s/lzgm97PQ-_arN1YpJ9-teg" target="_blank" rel="noopener external nofollow noreferrer">股债收益比和股债利差</a>：</p><blockquote><p>十年期国债收益率是无风险利率的基准，而中证全指的PE倒数则代表当前整体股权资产的吸引力。当前A股相对于债券的吸引力，都已经显著达到08年大底和14年大底的位置。<br>百度搜索指数是一个我很喜欢用来观察情绪的指标。</p></blockquote><h3 id="发车"><a href="#发车" class="headerlink" title="发车"></a>发车</h3><p><a href="https://www.jisilu.cn/data/indicator/" target="_blank" rel="noopener external nofollow noreferrer">A股全市场温度计</a>，PB 12.21，PE 16.05。</p><p>月底的 <code>基本面 50</code> 收盘结束前发出的金额与上午不一致，补发半份 50 元。</p><p>昨天（2020年3月31日）， <code>盛屯转债</code> 卖出，盈利 <font color="red">+90.99</font>。</p><p><a href="https://qieman.com/portfolios/ZH035746" target="_blank" rel="noopener external nofollow noreferrer">且慢组合</a>发车一份，200 元：<em>现在是底部区域，价格不贵，加之港股通明天暂停交易，而且今天收跌，继续收集筹码</em>。</p><p>网格 3 月初 7074.78，转入 2650.79，月末资产 <code>9533.89</code>，盈亏<font color="green"> -191.68 </font>，收益率<font color="green"> -2.15% </font>。迄今为止，本金累计投入 <code>9677.04</code>‬。</p><p><strong>守拙、隐忍、耐心</strong>。</p><!-- rebuild by neat --></body></html>]]></content>
      <categories>
        <category>滴滴</category>
      </categories>
      <tags>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>Your Lie in April</title>
    <url>/posts/c9ed3ded.html</url>
    <content><![CDATA[<!-- build time:Tue Apr 14 2020 12:22:09 GMT+0800 (GMT+08:00) --><html><head></head><body><blockquote><p>“我喜欢花，难道你摘下来让我闻；我喜欢风，难道你让风停下来；我喜欢云，难道你就让云罩着我；我喜欢海，难道我就去跳海？”</p></blockquote><a id="more"></a><h3 id="History"><a href="#History" class="headerlink" title="History"></a>History</h3><p>1976年4月1日，年仅21岁的Steve Jobs、26岁的Stephen Wozniak和Ron Wayne三人成立了苹果🍎算机股份有限公司。</p><p>毋庸置疑，谈起那个时代的 Apple 确实是一个有足够创造力而又伟大的公司，现如今却有些唏嘘，技术的进步，似乎终将消弭产品的绝大部分差异，然而创新力似乎也跟着一起下降了呢。每天拿着📱的我，不得不面对一会儿就发热，或者一会儿就杀后台的窘境。</p><h3 id="四月一日君寻"><a href="#四月一日君寻" class="headerlink" title="四月一日君寻"></a>四月一日君寻</h3><p><a href="https://imgchr.com/i/G1K9r6" target="_blank" rel="noopener external nofollow noreferrer"><img src="https://s1.ax1x.com/2020/04/01/G1K9r6.md.png" alt="G1K9r6.md.png"></a></p><p>每年的今天朋友圈、B 乎、公众号等都会照例怀念张国荣，至于我，没有太多的感受，本身也不是一个“荣迷”，只是那天看了一下新闻，后来了解到其他的资料和影片，如《倩女幽魂》、《东邪西毒》、《英雄本色》的时候，才开始真正的关注张国荣。风流倜傥是他带给我的第一印象，翩翩不羁，又有些放浪形骸的英姿。</p><p><a href="https://imgchr.com/i/G1uzx1" target="_blank" rel="noopener external nofollow noreferrer"><img src="https://s1.ax1x.com/2020/04/01/G1uzx1.md.jpg" alt="G1uzx1.md.jpg"></a></p><p>每每到此，只是单纯的怀念。今年特殊，宅家看电影的时候，顺着发哥的词条标注了好多电影，进而偶然翻到了一部《纵横四海》。观毕真的是潇洒美少年，举觞望青天，玉树临风前！那一段经典的轮椅舞，双人舞，啧啧，红姑、发哥、哥哥，真是绝配了👍。以至于如今欣赏完影片，真是感叹凡今之人，莫如兄弟，饮酒之饫，回味悠长。至于张国荣的其他作品，《霸王别姬》总感觉太悲伤了，下不了决心看；《春光乍泄》似乎可以一看，准备列入影单当中。</p><h3 id="已约年年，为此会，春梦了无痕"><a href="#已约年年，为此会，春梦了无痕" class="headerlink" title="已约年年，为此会，春梦了无痕"></a>已约年年，为此会，春梦了无痕</h3><blockquote><p>我劝你早点归去<br>你说你不想归去<br>只叫我抱着你<br>……<br>让风继续吹<br>不忍远离<br>心里极渴望<br>希望留下伴着你<br>……<br>我已令你快乐<br>你也令我痴痴醉<br>你已在我心<br>不必再问记着谁<br>…… ”</p></blockquote><!-- rebuild by neat --></body></html>]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>That All Started With The Big Bang</title>
    <url>/posts/76846ca1.html</url>
    <content><![CDATA[<!-- build time:Tue Apr 14 2020 12:22:09 GMT+0800 (GMT+08:00) --><html><head></head><body><p>Good goodbye, my favourite show! 😘😍😭</p><a id="more"></a><h3 id="旧时光"><a href="#旧时光" class="headerlink" title="旧时光"></a>旧时光</h3><p>别人的青春或许《老友记》更多一点，抑或类似阳总，《武林外传》、《爱情公寓》（每每吐槽却又不得不保持强烈的求生欲，换我宁愿看《东北一家人》、《炊事班的故事》😔），而我独爱这<a href="https://img1.doubanio.com/view/photo/raw/public/p2573784048.jpg" target="_blank" rel="noopener external nofollow noreferrer">《生活大爆炸》</a>，在这最近因为疫情等被迫变慢的节奏里，终日宅家发毛的我得以有机会补剧情了。</p><p>必须承认，一开始喜剧并没有进入我的视线，也不知道从何时开始看的。但是，关于美剧，却恰似忽如一夜春风来，越来越多的人开始聊、谈、看、下。那时候最火的当属《越狱》，帅帅的斯科菲尔德，伴随着 5Q bt 火遍整个教育网。PS：当然多年后我在看《好汉两个半》笑的抽搐时，才体会到舍友坛子边吃边看边狂喷，啊啊，青春是用来回忆的，同时也怀念一下老坛，不幸和明天谁也猜不到哪一个先降临。</p><p><a href="https://imgchr.com/i/GlQeL6" target="_blank" rel="noopener external nofollow noreferrer"><img src="https://s1.ax1x.com/2020/03/31/GlQeL6.jpg" alt="GlQeL6.jpg"></a></p><p>不记得何时开始追的了，记得那一人一句的 “HI” 开启的旅程，没想到是如此不能自拔。每一季都勤勤恳恳追完，然后乐乐呵呵享受这难得的 20 分钟时光，就像是大口喝茶小小回味，慢慢回放。这种怡然自得的状态一直持续到第九季，然后突然开始变得忙碌起来，生活、工作、大小阳总，每天总是在仿佛兮状态似中年，飘飘兮脉动不回来的路上狂奔。于是，连同硬盘里的《傲骨贤妻》、《进击的巨人》等一起放在角落里等着打开的那一天。</p><p>一个人独自享受完这一集的好时光，你跟着他们感动，陪着他们笑，最后这变成一种惯例，一种你与他们之间的梗，如今，走到这里，难说再见，他们作为这段路程的重点交接给下一步给你带来温暖、力量的剧集，他们不会尘封在脑海，而是会在某个瞬间，某个场景，一下子有个片段或者台词蹦到你的眼前跃跃欲试，在你的耳边窃窃私语，在你的唇边呼之欲出。你明白，这是老友给你打招呼的方式。</p><h3 id="后爆炸时代"><a href="#后爆炸时代" class="headerlink" title="后爆炸时代"></a>后爆炸时代</h3><p><a href="https://imgchr.com/i/GlQNef" target="_blank" rel="noopener external nofollow noreferrer"><img src="https://s1.ax1x.com/2020/03/31/GlQNef.jpg" alt="GlQNef.jpg"></a></p><p><a href="https://img1.doubanio.com/view/photo/raw/public/p2556864487.jpg" target="_blank" rel="noopener external nofollow noreferrer">第十二季</a>，似乎就是用来成就的，用来圆满的，用来和解的，用来幸福的：二胎的 Howard & Bernadette，诺贝尔的 Sheldon & Amy，将为人父母的Leonard & Penny，注孤生的 Raj 似乎又要迎来好运了。生活唯一不变的就是变化，所以生而为人，拥抱变化。</p><h3 id="Hold-on-what-I’ve-got"><a href="#Hold-on-what-I’ve-got" class="headerlink" title="Hold on what I’ve got"></a>Hold on what I’ve got</h3><p>最后，用谢尔顿的结语，作为一段时光的封存，爱你们❤：</p><blockquote><p>一直以来，我受到的鼓励支持，激励与容忍，不仅来自我的妻子，还来自世界上最好的一群朋友，现在我想请他们起立，拉杰什·库萨帕里博士、伯纳黛特·罗斯滕科斯基·沃罗威茨博士、宇航员霍华德·沃罗威茨、以及我世上最好的两个挚友，佩妮·霍夫斯塔德、以及莱纳德·霍夫斯塔德博士，莱纳德与佩妮初次相遇时我在场，他对我说”他们的孩子一定会又聪明又好看”，而现在他们即将迎来新生命，我毫不怀疑这孩子会像他说的那样……霍华德 伯纳黛特 拉杰 佩妮 莱纳德，抱歉我一直不是个称职的朋友，但我希望你们知道，我用我的方式 爱着你们所有人，（转身对艾米）我也爱你，谢谢大家。（来自豆瓣翻译）</p></blockquote><p>—— 于2020年3月31日22点31分</p><!-- rebuild by neat --></body></html>]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>生活大爆炸</tag>
        <tag>The Big Bang Theory</tag>
      </tags>
  </entry>
  <entry>
    <title>3月发车</title>
    <url>/posts/82edd20.html</url>
    <content><![CDATA[<!-- build time:Tue Apr 14 2020 12:22:09 GMT+0800 (GMT+08:00) --><html><head></head><body><p>本月定投发车，合计 1400 元。</p><a id="more"></a><h3 id="月定投"><a href="#月定投" class="headerlink" title="月定投"></a>月定投</h3><table><thead><tr><th align="left">NAME</th><th align="right">Amount</th></tr></thead><tbody><tr><td align="left">建信中证500</td><td align="right">100</td></tr><tr><td align="left">易方达中证500</td><td align="right">90</td></tr><tr><td align="left">嘉实基本面50</td><td align="right">10</td></tr><tr><td align="left">华宝香港中小</td><td align="right">400</td></tr><tr><td align="left">中欧医疗健康</td><td align="right">10</td></tr><tr><td align="left">国泰国证食品饮料</td><td align="right">120</td></tr><tr><td align="left">申万菱信沪深300</td><td align="right">250</td></tr><tr><td align="left">易方达恒生</td><td align="right">150</td></tr><tr><td align="left">大成中证红利</td><td align="right">270</td></tr></tbody></table><h3 id="网格"><a href="#网格" class="headerlink" title="网格"></a>网格</h3><p>买入券商ETF一份。</p><h3 id="主动"><a href="#主动" class="headerlink" title="主动"></a>主动</h3><p><a href="https://qieman.com/portfolios/ZH035746" target="_blank" rel="noopener external nofollow noreferrer">且慢组合</a>暂不发车，视明天情况而定。</p><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><blockquote><p>今天就这样吧。没有交易欲望，索然无味。下个月第一次发车也是随机的，不一定哪天了。</p><p>主要原因是目前各市场趋势不好，距离上次买入空间不够，不急，再看看。 ​​​</p></blockquote><div style="text-align:right">—— ETF拯救世界</div><!-- rebuild by neat --></body></html>]]></content>
      <categories>
        <category>滴滴</category>
      </categories>
  </entry>
  <entry>
    <title>迁移 CDN</title>
    <url>/posts/f8073faa.html</url>
    <content><![CDATA[<!-- build time:Tue Apr 14 2020 12:22:09 GMT+0800 (GMT+08:00) --><html><head></head><body><p>同性交友网站国内访问太慢了，私以为国内的几家托管商掉链子太厉害了，当然运营商也难逃干系，辣鸡移不动，网中网，墙中墙，o(︶︿︶)o 唉，没办法了。从昨晚开始，寻找解决方案。</p><a id="more"></a><h3 id="About-Coding-Page"><a href="#About-Coding-Page" class="headerlink" title="About Coding Page"></a>About Coding Page</h3><p>呵呵三连，背靠麻花藤这个大树，然而稳定性真是堪忧呢，服务行不行全看好不好心情，还不如 <code>gayhub</code> 来的稳定，再者空间上还有 128M 的容量限制，没法做朋友。更主要的是在官方建议里，最好不要双线部署。</p><p>经过一番搜索，CDN 服务是首选，加快访问速度，妈妈再也不担心满格信号 404 了，列入备选名单有 <a href="https://www.cloudflare.com/" target="_blank" rel="noopener external nofollow noreferrer"><code>cloudflare</code></a>、<a href="https://www.upyun.com/league" target="_blank" rel="noopener external nofollow noreferrer"><code>又拍云</code></a>、<a href="https://app.netlify.com/signup" target="_blank" rel="noopener external nofollow noreferrer"><code>Netlify</code></a>。</p><h3 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h3><p>对于网站没有备案的来说，比较友好，可靠，直接给网站加速，具体设置按照教程一步一步来就可以了，主要分两部分：</p><ul><li><code>Cloudflare</code> 设置</li><li>修改域名解析 <code>DNS</code></li></ul><h4 id="详细设置"><a href="#详细设置" class="headerlink" title="详细设置"></a>详细设置</h4><p>参考博客<a href="https://blog.csdn.net/qq_36759224/article/details/98057466" target="_blank" rel="noopener external nofollow noreferrer">利用Cloudflare为基于GitHub Pages的Hexo博客添加HTTPS支持</a> 即可，包括全站 HTTPS、阿里云的域名 DNS 修改。</p><p>需要注意一点的是 “ERR_TOO_MANY_REDIRECTS”，原因在于 HTTP 和 HTTPS 之间重定向：<a href="#refer-anchor-1"><sup>1</sup></a></p><blockquote><p>当网站开启了 CloudFlare 服务，用户访问我们的网站时，其实访问的离用户比较近的 Cloudflare 服务器，Cloudflare 再代理用户请求我们的源服务器，以达到加速和保护源服务器的目的。Cloudflare 代理用户请求我们源服务器获取网页资源的过程叫回源。<br>Cloudflare 造成循环重定向的错误就出在了回源的过程中，造成这种错误的原因就是 http 和 https 之间的重定向。</p></blockquote><p>解决办法任选其一：</p><blockquote><p>SSL 中选择 Full(strict) 或者 Full(strict)，让 CDN 回源的时候使用 HTTPS 的方式回源，没有 HTTP 什么事了，就不会跳来跳去了</p><p>源网站不设置 HTTPS 支持或者不设置 HTTP 跳转 HTTPS，让 Cloudflare 回源的时候使用 HTTP 方式获取资源。</p></blockquote><p>经过上面的<strong>第一种</strong>设置后，<code>gayhub</code> 里的 <code>Enforce HTTPS</code> 可以照常启用。</p><h4 id="Netlify"><a href="#Netlify" class="headerlink" title="Netlify"></a>Netlify</h4><p>可以让百度收录，支持仓库拉取代码，自定义域名，以及 SSL 申请，CDN 加速等，具体服务可以看<a href="https://www.netlify.com/pricing/" target="_blank" rel="noopener external nofollow noreferrer">这里</a>。部署方式可以看<a href="https://ops-coffee.cn/s/11-yhyohtdsbl9ffnvcs6w" target="_blank" rel="noopener external nofollow noreferrer">这里</a>。</p><h4 id="又拍云"><a href="#又拍云" class="headerlink" title="又拍云"></a>又拍云</h4><p>提供免费的 HTTPS 证书申请服务，同时加入联盟每个月享有 10GB 免费存储空间和 15GB 免费 CDN 流量(HTTP/HTTPS 均可用)，对于备案的网站来说还是很可以的。</p><h4 id="zeit"><a href="#zeit" class="headerlink" title="zeit"></a>zeit</h4><p>跟 <code>Netlify</code> 类似，百度收录，可以用 hub 账号登录，网址为<a href="https://zeit.co/pricing" target="_blank" rel="noopener external nofollow noreferrer">zeit</a>，提供免费 HTTPS，Git 持续集成，Smart CDN，不限项目数量等服务，可参考<a href="https://zpjiang.me/2020/01/15/let-baidu-index-github-page" target="_blank" rel="noopener external nofollow noreferrer">这篇</a>。</p><h3 id="加速乐"><a href="#加速乐" class="headerlink" title="加速乐"></a>加速乐</h3><p>2020年3月30日 15:25:37，又发现一个 CDN – <a href="https://defense.yunaq.com/jsl/#price" target="_blank" rel="noopener external nofollow noreferrer">加速乐</a>，3600GB/月，免费仅限 80 端口，做备用。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><div id="refer-anchor-1"></div><ul><li><p>[1] <a href="https://www.wpzhiku.com/wordpress-wang-zhan-shi-yong-cloudflare-hou-ti-shi-jiang-nin-chong-ding-xiang-de-ci-shu-guo-duo-de-yuan-yin-ji-jie-jue-ban-fa/" target="_blank" rel="noopener external nofollow noreferrer">WordPress 智库</a></p></li><li><p>[2] <a href="https://molunerfinn.com/hexo-travisci-https/#%E7%BB%99%E8%87%AA%E6%9C%89%E5%9F%9F%E5%90%8D%E7%9A%84github-page%E4%B8%8AHTTPS" target="_blank" rel="noopener external nofollow noreferrer">hexo持久化构建以及给自有域名github-page上HTTPS</a></p></li><li><p>[3] <a href="https://hongwan.xyz/2020/03/16/netlify%E5%92%8Ccloudflare%E4%B8%8Ezeit%E6%90%AD%E9%85%8Djsdelivr%E7%BB%99Hexo%E5%8D%9A%E5%AE%A2cdn%E5%8A%A0%E9%80%9F%E5%AF%B9%E6%AF%94/" target="_blank" rel="noopener external nofollow noreferrer">Netlify和cloudflare与zeit搭配jsdelivr给Hexo博客cdn加速对比</a></p></li><li><p>[4] <a href="https://io-oi.me/tech/deploy-static-site-to-netlify/" target="_blank" rel="noopener external nofollow noreferrer">将 Hexo 静态博客部署到 Netlify</a></p></li><li><p>[5] <a href="https://tang.su/2019/09/use-cdn-to-speed-up-github-pages/" target="_blank" rel="noopener external nofollow noreferrer">利用CDN加速Github Pages访问</a></p></li></ul><!-- rebuild by neat --></body></html>]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>CDN</tag>
        <tag>Cloudfare</tag>
      </tags>
  </entry>
  <entry>
    <title>周总结（3/23~3/29）</title>
    <url>/posts/b81283f.html</url>
    <content><![CDATA[<!-- build time:Tue Apr 14 2020 12:22:09 GMT+0800 (GMT+08:00) --><html><head></head><body><p>扬州三月好，蛰居待花开。</p><a id="more"></a><h3 id="打卡"><a href="#打卡" class="headerlink" title="打卡"></a>打卡</h3><p>跑量 <code>26.48km</code> ，顺利完成目标值，对脚上的这双 <code>Rider</code> 甚是满意，跟脚不重反弹好回馈清晰。本周看了一篇文章，尝试控制心率在 <code>140</code> 以下跑完 <code>5km</code> ，结果差强人意，配速有些乱，周平均配速为 <code>534</code> ，节奏控制不稳定，特别是起步阶段的 1~2 公里，心率不降反升，有时候会突破 <code>150</code> ，下周继续尝试稳定心率。估计这个过程跟戒烟差不多，适应了随性跑心率 <code>140+</code> 节奏，一下子控制起来感觉跑的太慢。</p><p>以下来自 <a href="https://mp.weixin.qq.com/s/WB6J6f7QTCC4Wunvepivpw" target="_blank" rel="noopener external nofollow noreferrer">慧跑</a> 公众号文章摘抄：</p><blockquote><p>心率是衡量运动强度的重要指标，如果初跑者有心率手表或者心率手环，那么你要知道把心率控制在140次/分以下，有多么重要。</p><p>一周进行5次，每次30分钟的中等强度运动，或者一周进行3次，每次20分钟大强度的运动。</p></blockquote><p>这篇文章给我的启发在于，劳累的时候需要关注机体指标，注意节奏，特别是晚上加班，白条早起，中午缺睡的情况，适当微微汗更理想，有时候还得休跑以给予身体足够的恢复时间。</p><h3 id="理财"><a href="#理财" class="headerlink" title="理财"></a>理财</h3><p>本周资本市场继续受新冠疫情的影响，投资者普遍情绪谨慎，金毛一通大放水叠加 G20 会议，虽有提振，但是不改经济衰退的方向，继续保持定力，观察经济和政策的合力方向。未来货币有比现在要高的贬值预期，黄金开启了买买买的节奏，金价开始回升，不过贫民还是现金和理财两手抓，保证自己的流动性和收益率。希望我大 A 坚挺些，全球化一体，独善其身不大可能，至少全身而退是大概率事件，做多中国。继续耐心等待机会出现，在底部区域捡筹码。</p><p><a href="https://qieman.com/portfolios/ZH035746/weekly-reports/b6ed583e738a83127bb27a0ce8e5092f" target="_blank" rel="noopener external nofollow noreferrer">且慢组合</a> 本周五净值 1.1620，上涨 <font color="red">+1.68%</font>。周四 3/26 买入 200 元，总投入 11,000，市值 10650.85，累计收益率 <font color="green">-3.17%</font>。</p><p>定投组合本周为止总市值 76346.18，今年来收益率 <font color="green">-6.52%</font>。</p><p>网格本周为止‬总市值 9453.62，今年来累计盈亏 <font color="green">-300.24</font>。</p><p>越来越真切的感受到花无百日好，眼看高楼起，最终回归该有的价值，要做的就是耐心选择我们认为好的标的，底部买入，安静持有。</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>本周买了一个心心念念的洗碗机，13 套的，解放劳动力，真香！另，虽然复工了有一段时间了，但是街上还是很冷清，商场也禁止小朋友出入，阳总母子有点无聊了，还好春暖花开，天气越来越好，总算是能找到小朋友了。在此，也得感谢年前入手的两套拼搭积木，帮助小阳度过宅家的开始阶段。</p><!-- rebuild by neat --></body></html>]]></content>
      <categories>
        <category>随笔</category>
        <category>数字生活</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/4a17b156.html</url>
    <content><![CDATA[<!-- build time:Tue Apr 14 2020 12:22:09 GMT+0800 (GMT+08:00) --><html><head></head><body><p>Welcome to my very first post.</p><a id="more"></a><h2 id="开篇"><a href="#开篇" class="headerlink" title="开篇"></a>开篇</h2><h3 id="初衷"><a href="#初衷" class="headerlink" title="初衷"></a>初衷</h3><p>年前就想着开一个博客，记得很久以前在百度有过，结果404到网盘了。本着写写片段，记记所想，吐槽一下生活的目的，这里算是一个树洞吧。然人贵有一勤而有多懒，所以一直拖到现在。万事开头难，好在终于开始了，这两天选了一个域名，阿里云上有很多，挑了一个顺眼的。因此，从这里开始吧，HELLO WORLD ~</p><h3 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h3><p>对于博客选型，个人因为喜欢 <code>markdown</code> 的风格，所以考虑用了 <code>Hexo</code> 。然而调试整改之路何其漫长，不过也算是对 <code>Hexo</code> 的配置和结构有点了解了。不过免费托管的东西速度上确实堪忧，这里要吐槽一下移动宽带，垃圾中的辣鸡，所以用得静态资源能用 <code>CDN</code> 的还是用吧，加载速度确实快。</p><p><code>GitHub</code> 需要在本地配置一下 <code>hosts</code> 文件，最近似各种抽风，推送慢很多，打开<a href="https://tool.chinaz.com/dns?type=1&host=github.com&ip=" target="_blank" rel="noopener external nofollow noreferrer">站长工具</a> 查询 <code>TTL</code> 值最小的 <code>IP</code> 保存到 <code>hosts</code> 中去，这样会好很多；另外 <code>github.global.ssl.fastly.net</code> 也查一下保存。</p><p>需要的美化教程中， <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener external nofollow noreferrer">liaofuzhan</a> 确实给了很多参考，一并记录给后面需要的人。</p><h3 id="要写点啥"><a href="#要写点啥" class="headerlink" title="要写点啥"></a>要写点啥</h3><p>初步打算下来，主要是以下方面：</p><ul><li>工作方面的一些感想和积累，以及需要的代码片段</li><li>运动打卡，<code>5</code> 天 <code>5</code> 公里，周目标值 <code>25km</code> ，月挑战值 <code>110km</code></li><li>好物推荐，用来记录自己未入手却比较感兴趣的东西，在用的东西</li><li>其他</li></ul><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>感谢阳夫人和小阳总的支持，是你们给了我更多生活的快乐，笔芯！</p><!-- rebuild by neat --></body></html>]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>hello</tag>
      </tags>
  </entry>
</search>
